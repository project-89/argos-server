rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Common validation functions
    function isValidTime(timeInMillis) {
      return timeInMillis is number 
        && timeInMillis <= request.time.toMillis() + 60000  // Within 1 minute future
        && timeInMillis >= request.time.toMillis() - 60000; // Within 1 minute past
    }

    // Rules for fingerprints collection
    match /fingerprints/{fingerprintId} {
      allow read: if true;  // Public read for fingerprint verification
      allow write: if false;  // Only Cloud Functions can write
    }

    // Rules for visits collection
    match /visits/{visitId} {
      allow read: if true;  // Public read for visit history
      allow write: if false;  // Only Cloud Functions can write
    }

    // Rules for presence tracking
    match /presence/{fingerprintId} {
      allow read: if true;  // Public read for presence status
      allow write: if false;  // Only Cloud Functions can write
    }

    // Rules for API keys - most sensitive collection
    match /apiKeys/{keyId} {
      allow read, write: if false;  // Strictly Cloud Functions only
    }

    // Rules for price history
    match /price-history/{docId} {
      allow read: if true;  // Public read for price data
      allow write: if false;  // Only Cloud Functions can write
    }

    // Rules for stability metrics
    match /stability-metrics/{docId} {
      allow read: if true;  // Public read for stability data
      allow write: if false;  // Only Cloud Functions can write
    }

    // Rules for rate limits
    match /rate-limits/{docId} {
      allow read, write: if false;  // Strictly Cloud Functions only
    }

    // Rules for tags
    match /tags/{tagId} {
      allow read: if true;  // Public read for tags
      allow write: if false;  // Only Cloud Functions can write
    }
  }
}
